; Copyright 2011 Google Inc. All Rights Reserved.
;
; Note: This file is auto-generated. All changes will be lost.

; OpenGL dependent settings.
PLATFORM = ogl {
  ; Bindings for vertex shader.
  ; 
  ; File containing vertex shader code.
  SETTINGS(vertexShader) {
    _textDefinition.file = watersurface.arbvp1
  }
  ; Constant registers.
  SETTINGS(model_view_proj_VS) {
    _baseRegister.value = 1
  }
  SETTINGS(clip_to_water_mat_VS) {
    _baseRegister.value = 5
  }
  SETTINGS(fog_density_VS) {
    _baseRegister.value = 9
  }
  SETTINGS(eye_pos_and_anim_time_VS) {
    _baseRegister.value = 10
  }
  SETTINGS(wave_scales_VS) {
    _baseRegister.value = 11
  }
  ; Bindings for pixel shader.
  ; 
  ; File containing pixel shader code.
  SETTINGS(pixelShader) {
    _textDefinition.file = watersurface.arbfp1
  }
  ; Constant registers.
  SETTINGS(fog_color_and_max_alpha_PS) {
    _baseRegister.value = 0
  }
  SETTINGS(bump_weights_PS) {
    _baseRegister.value = 1
  }
  SETTINGS(fragment_constants_PS) {
    _baseRegister.value = 2
  }
  ; Texture samplers.
  SETTINGS(bump_map_PS) {
    _samplerNumber.value = 0
  }
  SETTINGS(sky_reflection_map_PS) {
    _samplerNumber.value = 1
  }
}

; DirectX9 dependent settings.
PLATFORM = dx9 {
  ; Bindings for vertex shader.
  ; 
  ; File containing vertex shader code.
  SETTINGS(vertexShader) {
    _textDefinition.file = watersurface.vs_2_0
  }
  ; Constant registers.
  SETTINGS(model_view_proj_VS) {
    _baseRegister.value = 0
  }
  SETTINGS(clip_to_water_mat_VS) {
    _baseRegister.value = 4
  }
  SETTINGS(fog_density_VS) {
    _baseRegister.value = 8
  }
  SETTINGS(eye_pos_and_anim_time_VS) {
    _baseRegister.value = 9
  }
  SETTINGS(wave_scales_VS) {
    _baseRegister.value = 10
  }
  ; Bindings for pixel shader.
  ; 
  ; File containing pixel shader code.
  SETTINGS(pixelShader) {
    _textDefinition.file = watersurface.ps_2_0
  }
  ; Constant registers.
  SETTINGS(fog_color_and_max_alpha_PS) {
    _baseRegister.value = 0
  }
  SETTINGS(bump_weights_PS) {
    _baseRegister.value = 1
  }
  SETTINGS(fragment_constants_PS) {
    _baseRegister.value = 2
  }
  ; Texture samplers.
  SETTINGS(bump_map_PS) {
    _samplerNumber.value = 0
  }
  SETTINGS(sky_reflection_map_PS) {
    _samplerNumber.value = 1
  }
}

